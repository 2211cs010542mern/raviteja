

React memo:
It is a hoc (high order component)is not react hook
It will stop unnecessary rendering of functional components of its props
#keyword
#Suggestions
#1000 product
Parent
<c1>
<c2>
#child.jsx

APP.js:
import React, { useState } from "react";
import ChildA from "./ChildA";
import ChildB from "./ChildB";

const Parent = () => {
  const [count, setCount] = useState(0);

  const increment = () => {
    setCount((c) => c + 1);
  };

  return (
    <div>
      <ChildA />
      <ChildB count={count} increment={increment} />
    </div>
  );
};

export default Parent;

childA.js:
const ChildA=()=>{
    console.log("Child A rendered")
    return <h2>This is Child A</h2>;

};
export default ChildA;

childB.js:
const ChildB = ({ count, increment }) => {
    console.log("Child B rendered");
    return (
        <div>
            <h1>Count: {count}</h1>
            <button onClick={increment}>Increment</button>
        </div>
    );
};

export default ChildB;

Button will circle :
ChildB.js:
import React from "react";

// Adding a circular button in ChildB
const ChildB = ({ count, increment }) => {
  return (
    <div>
      <h1>Count: {count}</h1>
      {/* Circle button that triggers increment */}
      <button 
        onClick={increment} 
        style={styles.circleButton}
      >
        +
      </button>
    </div>
  );
};

// Style for the circular button
const styles = {
  circleButton: {
    width: '50px',
    height: '50px',
    borderRadius: '50%',
    backgroundColor: '#4CAF50',
    color: 'white',
    border: 'none',
    fontSize: '20px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    cursor: 'pointer',
    marginTop: '10px',
  }
};

export default ChildB;

